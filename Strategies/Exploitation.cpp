#include "Exploitation.h"
#include "../BehaviorTree/BT_Noeud.h"
#include <chrono>

BT_Noeud::ETAT_ELEMENT Exploitation::execute() noexcept {
   //auto pre = std::chrono::high_resolution_clock::now();

   //GameManager::Log("Exploitation");
   // Précondition vérifié : il y a au moins autant d'objectifs que de npcs
   // Calculer si il existe un chemin pour un objectif unique pour chacun des npcs


   vector<unsigned int> objectifNonAttribues = gm.m.getObjectifs();
   for (auto& npc : gm.getNpcs()) {
      int ind = 0;
      for (auto objectif : objectifNonAttribues) {
         if (npc.getEnsembleAccessible()->is_flooded(objectif)) {
            npc.setChemin(gm.m.aStar(npc.getTileId(), objectif));
            break;
         }
         ++ind;
      }
      objectifNonAttribues.erase(objectifNonAttribues.begin() + ind);
   }

   // Temps d'execution
   //auto post = std::chrono::high_resolution_clock::now();
   //GameManager::Log("Durée Exploitation = " + to_string(std::chrono::duration_cast<std::chrono::microseconds>(post - pre).count() / 1000.f) + "ms");

   return ETAT_ELEMENT::REUSSI;
}
